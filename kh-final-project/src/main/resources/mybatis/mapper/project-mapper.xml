<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project">
	
	<select id="insert" parameterType="ProjectCategoryVo">
		insert into project
			(project_no, project_regist_date, project_summary, member_no, category_no, project_state)
		values
			(project_seq.nextval, sysdate, #{projectSummary}, #{memberNo}, #{categoryNo}, '1')
	</select>
	
	<select id="list" parameterType="int" resultType="ProjectDto">
		select * from project where member_no = #{memberNo}
	</select>
	
	<select id="proList" parameterType="int" resultType="ProjectDto">
<!-- 	<![CDATA[ -->
		select * from project where member_no = #{memberNo} and project_state = '1' or project_state = '2'
<!-- 		]]> -->
	</select>
	
	<select id="proList2" parameterType="int" resultType="ProjectDto">
		select * from project where member_no = #{memberNo} and project_state = '3' or project_state = '4' or project_state = 'x'
	</select>
	
	<select id="get" parameterType="ProjectDto" resultType="ProjectDto">
		select * from project where member_no = #{memberNo} and project_no = #{projectNo}
	</select>
	
	<select id="getByProjectNo" parameterType="ProjectDto" resultType="ProjectDto">
		select * from project where project_no = #{projectNo}
	</select>
	
	<select id="getProjectVoByProjectNo" parameterType="int" resultType="ProjectVo">
		select project_no, project_title, project_content, project_target_amount, project_percent, to_char(project_regist_date) project_regist_date, 
		to_char(project_start_date) project_start_date, to_char(project_end_date) project_end_date, project_stop_causes, project_summary, 
		member_no, category_no, member_info_nick, member_info_content, project_state, project_content_file 
		from project where project_no = #{projectNo}
	</select>
	
	<select id="insertBySequence" parameterType="ProjectCategoryVo">
		insert into project
			(project_no, project_regist_date, project_summary, member_no, category_no, project_state)
		values
			(#{projectNo}, sysdate, #{projectSummary}, #{memberNo}, #{categoryNo}, '1')
	</select>
	
	<select id="sequence" resultType="int">
		select project_seq.nextval from dual
	</select>
	
	<update id="projectDefaultUpdate" parameterType="ProjectDto">
		update project 
		set category_no = #{categoryNo}, project_title = #{projectTitle} ,project_summary = #{projectSummary} 
		where project_no = #{projectNo}
	</update>
	
	<update id="projectDefaultProgress" parameterType="int">
		SELECT PROJECT_TITLE , PROJECT_SUMMARY, CATEGORY_NO FROM project WHERE project_no = #{projectNo}
	</update>
	
	<update id="projectFundingUpdate" parameterType="ProjectDto">
		update project 
		set project_target_amount = #{projectTargetAmount}, project_start_date = #{projectStartDate}, project_end_date = #{projectEndDate}
		where project_no = #{projectNo}
	</update>
	
	<select id="projectEndDatePlus7" parameterType="int" resultType="String">
		SELECT project_end_date + INTERVAL '7' DAY FROM project WHERE project_no = #{projectNo}
	</select>
	
	<select id="projectEndDatePlus14" parameterType="int" resultType="String">
		SELECT project_end_date + INTERVAL '14' DAY FROM project WHERE project_no = #{projectNo}
	</select>
	
	<select id="workingProject" parameterType="int" resultType="ProjectDto">
		select * from(
			select rownum rn, TMP.* from(
				SELECT * FROM project WHERE member_no = #{memberNo} ORDER BY project_no DESC
			)TMP
		) where rn = 1
	</select>
	
	<update id="projectMemberUpdate" parameterType="ProjectDto">
		update project 
		set member_info_nick = #{memberInfoNick}, member_info_content = #{memberInfoContent}
		where project_no = #{projectNo}
	</update>
	<!-- 프로젝트 스토리 업데이트 -->
	<update id="projectStoryUpdate" parameterType="projectDto">
		update project set project_content = #{projectContent}, project_content_file = #{projectContentFile} where project_no = #{projectNo}
	</update>
	
	<update id="projectApprovalUpdate2" parameterType="int">
		update project set project_state = '2' where project_no = #{projectNo}
	</update>
	
	<update id="projectApprovalUpdate1" parameterType="int">
		update project set project_state = '1' where project_no = #{projectNo}
	</update>
	
	<!-- CLOB 가져오기 위한 설정 -->
	<resultMap id="progress" type="ProjectProgressVo" >
	    <result property="projectContent" column="project_content" jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap>

	<!-- 항목 전체 가져오기 -->
	<select id="getProjectProgress" parameterType="int" resultMap="progress">
		select * from(
		    select PROJECT.*, GIFT.gCount, ITEM.iCount, IMAGE.iFCount from project PROJECT
		        left outer join
		            (select P.project_no, count(G.gift_no) gCount from project P
		            inner join gift G on P.project_no = G.project_no
		            group by P.project_no)
		            GIFT on PROJECT.project_no = GIFT.project_no
		        left outer join
		            (select P.project_no, count(I.item_no) iCount from project P
		            inner join item I on P.project_no = I.project_no
		            group by P.project_no) ITEM on PROJECT.project_no = ITEM.project_no
		        left outer join
		            (select P.project_no, count(IF.image_no) iFCount from project P
		            inner join image_file IF on P.project_no = IF.project_no where IF.project_state = 'Y'
		            group by P.project_no) IMAGE on PROJECT.project_no = IMAGE.project_no
		    )
		where project_no = #{projectNo}
	</select>
	
	<delete id="projectDelete" parameterType="ProjectDto">
		delete project where project_no = #{projectNo} and member_no = #{memberNo}
	</delete>
	
	<!-- main 화면 현재 펀딩 진행중인 프로젝트 조회 구문 -->
	<select id="indexProjectMain" resultType="IndexProjectVo">
		<![CDATA[
			select * from(
				select rownum rn, TMP.* from(
					select
					    P.project_no,P.PROJECT_TITLE, P.PROJECT_PERCENT, P.MEMBER_INFO_NICK, P.PROJECT_STATE,
					    I.image_no,
					    C.CATEGORY_NO ,C.CATEGORY_THEME 
					from Project P
					    inner join image_file I on P.project_no = I.project_no 
						INNER JOIN category C ON P.category_no = C.category_no    
					WHERE I.project_state = 'Y' AND P.PROJECT_STATE = '3' AND project_start_date <= sysdate AND sysdate < project_end_date ORDER BY project_percent desc
				)TMP
			) where rn between 1 and 8
		]]>
	</select>
	
	
	<!-- main 화면 펀딩 진행예정인 프로젝트 조회 구문 -->
	<select id="indexProjectMain2" resultType="IndexProjectVo">
		<![CDATA[
			select * from(
				select rownum rn, TMP.* from(
					select
					    P.project_no,P.PROJECT_TITLE, P.PROJECT_PERCENT, P.MEMBER_INFO_NICK, P.PROJECT_STATE,
					    I.image_no,
					    C.CATEGORY_NO ,C.CATEGORY_THEME 
					from Project P
					    inner join image_file I on P.project_no = I.project_no 
						INNER JOIN category C ON P.category_no = C.category_no    
					WHERE I.project_state = 'Y' AND P.PROJECT_STATE = '3' AND project_start_date > sysdate  ORDER BY project_percent desc
				)TMP
			) where rn between 1 and 8
		]]>
	</select>
	
	<!-- main 화면 인기 추천 프로젝트 조회 구문 -->
	<select id="indexProjectMain3" resultType="IndexProjectVo">
		<![CDATA[
			select * from(
				select rownum rn, TMP.* from(
					select
					    P.project_no,P.PROJECT_TITLE, P.PROJECT_PERCENT, P.MEMBER_INFO_NICK, P.PROJECT_STATE,P.project_like_count,
					    I.image_no,
					    C.CATEGORY_NO ,C.CATEGORY_THEME 
					from Project P
					    inner join image_file I on P.project_no = I.project_no 
						INNER JOIN category C ON P.category_no = C.category_no    
					WHERE I.project_state = 'Y' AND P.PROJECT_STATE = '3' AND project_start_date <= sysdate AND sysdate < project_end_date ORDER BY project_like_count desc
				)TMP
			) where rn between 1 and 8
		]]>
	</select>
	
	
	
	<!-- 프로젝트 달성도 변경 -->
	<update id="setPercent" parameterType="ProjectDto">
		update project set project_percent = #{projectPercent} where project_no = #{projectNo}
	</update>
	
	
	<!-- 키워드 검색 -->
	<select id="projectSearch" parameterType="SearchVo" resultType="IndexProjectVo">
		<![CDATA[
			select * from(
			    select rownum rn, TMP.* from(
			        select
			            P.project_no,P.PROJECT_TITLE, P.PROJECT_PERCENT, P.MEMBER_INFO_NICK, 
			            P.PROJECT_STATE, I.image_no, C.CATEGORY_NO, C.CATEGORY_THEME, P.project_summary, P.project_content
			        from Project P
			            left outer join image_file I on P.project_no = I.project_no
						left outer join category C ON P.category_no = C.category_no
			        WHERE I.project_state = 'Y' AND P.PROJECT_STATE = '3' and (
			            instr(project_title, #{keyword}) > 0 
			                or
			            instr(project_content, #{keyword}) > 0
			                or
			            instr(project_summary, #{keyword}) > 0
			                or
			            instr(member_info_nick, #{keyword}) > 0)
			           ${projectStateString}
			        ORDER BY ${projectOrderString} DESC   
			    )TMP
			) where rn between 1 and 8
		]]>
	</select>
	
	<!-- 키워드 검색 갯수 -->
	<select id="projectSearchCount" parameterType="SearchVo" resultType="int">
		<![CDATA[
			select count(*) from Project P
			    left outer join image_file I on P.project_no = I.project_no
			        where I.project_state = 'Y' and P.project_state = '3' and (
						instr(P.project_title, #{keyword}) > 0 
						    or
						instr(P.project_content, #{keyword}) > 0
						    or
						instr(P.project_summary, #{keyword}) > 0
						    or
						instr(P.member_info_nick, #{keyword}) > 0)
						${projectStateString}
		]]>
	</select>
	
	<!-- 키워드 모두 검색 -->
	<select id="projectSearchAll" parameterType="SearchVo" resultType="IndexProjectVo">
		<![CDATA[
	        select
	            P.project_no,P.PROJECT_TITLE, P.PROJECT_PERCENT, P.MEMBER_INFO_NICK, 
	            P.PROJECT_STATE, I.image_no, C.CATEGORY_NO, C.CATEGORY_THEME, P.project_summary, P.project_content
	        from Project P
	            left outer join image_file I on P.project_no = I.project_no
				left outer join category C ON P.category_no = C.category_no
	        WHERE I.project_state = 'Y' AND P.PROJECT_STATE = '3' and (
	            instr(project_title, #{keyword}) > 0 
	                or
	            instr(project_content, #{keyword}) > 0
	                or
	            instr(project_summary, #{keyword}) > 0
	                or
	            instr(member_info_nick, #{keyword}) > 0)
	        ${projectStateString}
	        ORDER BY ${projectOrderString} DESC   
		]]>
	</select>
	
	<!-- 키워드 검색 카테고리 -->
	<select id="projectCategorySearch" parameterType="searchVo" resultType="IndexProjectVo">
		<![CDATA[
			select * from(
			    select rownum rn, TMP.* from(
			        select
			            P.project_no,P.PROJECT_TITLE, P.PROJECT_PERCENT, P.MEMBER_INFO_NICK, 
			            P.PROJECT_STATE, I.image_no, C.CATEGORY_NO, C.CATEGORY_THEME, P.project_summary, P.project_content
			        from Project P
			            left outer join image_file I on P.project_no = I.project_no
			            left outer JOIN category C ON P.category_no = C.category_no
			        WHERE I.project_state = 'Y' AND P.PROJECT_STATE = '3' and instr(C.category_theme, #{keyword}) > 0 
			        ${projectStateString}
			        ORDER BY ${projectOrderString} DESC  
			    )TMP
			) where rn between 1 and 8
		]]>
	</select>
	
	<!-- 키워드 검색 카테고리 갯수 -->
	<select id="projectCategorySearchCount" parameterType="SearchVo" resultType="int">
		<![CDATA[
			select count(*) from Project P
			    left outer join image_file I on P.project_no = I.project_no
			    left outer join category C ON P.category_no = C.category_no
			WHERE I.project_state = 'Y' AND P.PROJECT_STATE = '3' and instr(C.category_theme, #{keyword}) > 0
			${projectStateString}
		]]>
	</select>
	
	<!-- 키워드 모두 검색 카테고리 -->
	<select id="projectCategorySearchAll" parameterType="SearchVo" resultType="IndexProjectVo">
		<![CDATA[
	        select
	            P.project_no,P.PROJECT_TITLE, P.PROJECT_PERCENT, P.MEMBER_INFO_NICK, 
	            P.PROJECT_STATE, I.image_no, C.CATEGORY_NO, C.CATEGORY_THEME, P.project_summary, P.project_content
	        from Project P
	            left outer join image_file I on P.project_no = I.project_no
	            left outer JOIN category C ON P.category_no = C.category_no
	        WHERE I.project_state = 'Y' AND P.PROJECT_STATE = '3' and instr(C.category_theme, #{keyword}) > 0 
	        ${projectStateString}
	        ORDER BY ${projectOrderString} DESC 
		]]>
	</select>
	
	<!-- 프로젝트 전체 검색 -->
	<select id="projectList" resultType="IndexProjectVo" parameterType="searchVo">
		select
	            P.project_no,P.PROJECT_TITLE, P.PROJECT_PERCENT, P.MEMBER_INFO_NICK, 
	            P.PROJECT_STATE, I.image_no, C.CATEGORY_NO, C.CATEGORY_THEME, P.project_summary, P.project_content
	        from Project P
	            left outer join image_file I on P.project_no = I.project_no
	            left outer JOIN category C ON P.category_no = C.category_no
	        WHERE I.project_state = 'Y' AND P.PROJECT_STATE = '3' 
	        ${projectStateString}
	        ORDER BY ${projectOrderString} DESC 
	</select>
	
	<update id="projectLikeUp">
		update project set project_like_count = project_like_count + 1 where project_no = #{projectNo}
	</update>
	
	<update id="projectLikeDown">
		update project set project_like_count = project_like_count - 1 where project_no = #{projectNo}
	</update>
	
	<select id="projectSponsorByProjectNo" parameterType="int" resultType="SponsorDto">
		SELECT * FROM SPONSOR  WHERE project_no = #{projectNo}
	</select>
	
	<select id="getSponsorSelect" parameterType="int" resultType="ProjectSponsorVo">
		SELECT 
			S.*,
			M.MEMBER_NICK, M.MEMBER_EMAIL , M.MEMBER_ADDRESS ,
			G.GIFT_PRICE , G.GIFT_SUMMARY
		FROM sponsor S 
			INNER JOIN MEMBER M ON S.member_no = M.member_no
			LEFT OUTER JOIN GIFT G ON S.gift_no = G.GIFT_NO 
		WHERE S.SPONSOR_NO = #{sponsorNo}
	</select>
	
	<update id="projectApprovalUpdate4">
		<![CDATA[
	        UPDATE project SET PROJECT_STATE = '4' WHERE project_state = '3' AND project_end_date <= sysdate
		]]>
	</update>
</mapper>












